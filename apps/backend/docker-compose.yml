# Versión del formato de docker-compose
version: '3.8'

# Definición de los servicios (contenedores)
services:
  # Nombre de nuestro servicio de base de datos
  postgres:
    # Usaremos la imagen oficial de Postgres v16, en su versión ligera "alpine"
    image: postgres:16-alpine
    
    # Le damos un nombre específico al contenedor para identificarlo fácilmente
    container_name: mi-tienda-db
    
    # Política de reinicio: si el contenedor se detiene, Docker intentará levantarlo de nuevo
    restart: always
    
    # Variables de entorno para configurar la base de datos
    environment:
      POSTGRES_USER: tienda_user # El usuario de la base de datos
      POSTGRES_PASSWORD: supersecretpassword123 # La contraseña (cámbiala si quieres)
      POSTGRES_DB: mi_tienda_db # El nombre de la base de datos que se creará
      
    # Mapeo de puertos: conecta el puerto 5432 de tu máquina al 5432 del contenedor
    # Esto nos permite conectarnos a la base de datos desde localhost:5432
    ports:
      - "5432:5432"
      
    # Volúmenes: aquí es donde se guardarán los datos de forma persistente
    # Incluso si borramos el contenedor, los datos en este volumen no se perderán
    volumes:
      - pgdata:/var/lib/postgresql/data

  # Servicio del backend
  backend:
    # Construir la imagen desde el Dockerfile en el directorio actual
    build: .
    
    # Le damos un nombre específico al contenedor para identificarlo fácilmente
    container_name: mi-tienda-backend
    
    # Política de reinicio: si el contenedor se detiene, Docker intentará levantarlo de nuevo
    restart: always
    
    # Variables de entorno
    environment:
      DATABASE_URL: "postgresql://tienda_user:supersecretpassword123@postgres:5432/mi_tienda_db?schema=public"
      PORT: 8080
      JWT_SECRET: "mi-clave-secreta-para-jwt-2025"
      
    # Mapeo de puertos: conecta el puerto 8080 de tu máquina al 8080 del contenedor
    # Esto nos permite acceder a la API desde localhost:8080
    ports:
      - "8080:8080"
      
    # Volúmenes: montar el directorio uploads para persistencia de archivos
    volumes:
      - ./uploads:/app/uploads
      
    # Dependencias: el backend debe esperar a que la base de datos esté lista
    depends_on:
      - postgres

# Definición de los volúmenes que Docker gestionará
volumes:
  pgdata: {}